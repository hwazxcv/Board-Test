plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.board'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	// https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc11
	implementation 'com.oracle.database.jdbc:ojdbc11:23.3.0.23.09'
	// https://mvnrepository.com/artifact/nz.net.ultraq.thymeleaf/thymeleaf-layout-dialect
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation 'org.modelmapper:modelmapper:3.2.0'

	// https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	// https://mvnrepository.com/artifact/com.querydsl/querydsl-apt
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'


	//jpa설정
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'


	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	// https://mvnrepository.com/artifact/com.h2database/h2
	testImplementation 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'



}

tasks.named('test') {
	useJUnitPlatform()
}
// queryDSL 추가 : QueryDSL 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}